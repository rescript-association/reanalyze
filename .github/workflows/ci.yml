name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-18.04, ubuntu-20.04, windows-latest]
        # syntax explanation:
        # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#example-including-additional-values-into-combinations
        include:
          - os: macos-latest
            prebuild: 
            build: eval $(opam env) && npm run build406 && npm test
            artifact-folder: darwin
            ocaml-version: 4.13.0
          - os: ubuntu-18.04
            prebuild: 
            build: eval $(opam env) && npm run build406 && npm test
            artifact-folder: linux
            ocaml-version: 4.13.0
          - os: ubuntu-20.04
            prebuild: 
            build: eval $(opam env) && dune build
            artifact-folder: linuxNotForReScript
            ocaml-version: 4.13.0
          - os: windows-latest
            prebuild: cp src/dune.406 src/dune
            build: "& $env:CYGWIN_ROOT\\bin\\ocaml-env exec -- dune build"
            artifact-folder: win32
            ocaml-version: 4.13.0

    runs-on: ${{matrix.os}}

    steps:
    # needed for Windows testing
    - name: Set git to use LF
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf

    - uses: actions/checkout@v2.3.4

    - name: Cache OCaml's opam
      uses: actions/cache@v2.1.5
      with:
        path: ~/.opam
        key: ${{matrix.os}}-rescript-vscode-v1

    - name: Use OCaml
      uses: ocaml/setup-ocaml@v1.1.12
      with:
        ocaml-version: ${{matrix.ocaml-version}}

    - name: Use Node.js
      uses: actions/setup-node@v2.1.5
      with:
        node-version: 14.4.0

    - run: npm ci

    - run: opam install dune cppo

    - name: Pre-build
      run: ${{matrix.prebuild}}

    - name: Build and test
      run: ${{matrix.build}}

    # Also avoids artifacts upload permission loss:
    # https://github.com/actions/upload-artifact/tree/ee69f02b3dfdecd58bb31b4d133da38ba6fe3700#permission-loss
    - name: Compress files
      run: |
        mkdir ${{matrix.artifact-folder}}
        cp _build/default/src/Reanalyze.exe reanalyze.exe
        tar -cvf binary.tar reanalyze.exe

    - uses: actions/upload-artifact@v2
      with:
        name: ${{matrix.os}}
        path: binary.tar

  npm_pack:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - name: download binaries
        uses: actions/download-artifact@v2
      - name: Pack reanalyze
        run: |
          # Put the built artifacts in the appropriate package folder
          tar xf macos-latest/binary.tar -C dist/vendor-darwin
          tar xf ubuntu-18.04/binary.tar -C dist/vendor-linux
          tar xf windows-latest/binary.tar -C dist/vendor-win32
          
          # Add the correct package.json / README / etc to dist
          node scripts/prepare_release.js

          # Pack everything up
          cd dist
          npm pack
          cd ..
          mv dist/reanalyze-*.tgz reanalyze-npm.tgz
      - name: upload reanalyze-npm.tgz
        uses: actions/upload-artifact@v2
        with:
          name: reanalyze-npm.tgz
          path: reanalyze-npm.tgz
